<launch>

    <!-- 是否使用仿真系统里面真实的base_link -->
    <arg name="use_baselink" default="false"/>
    <arg name="hdl" default="false" />
    <arg name="use_rviz" default="false" />
    <arg name="use_gui" default="true" />
    <!-- 将 Urdf 文件的内容加载到参数服务器 -->
    <env name="GAZEBO_MODEL_PATH" value="$(find robot_gazebo)/models"/>
    <env name="GAZEBO_RESOURCE_PATH" value="$(find robot_gazebo)/models"/>
    
    <!-- 启动 gazebo -->
    <arg name="world_name" default="$(find robot_gazebo)/worlds/demo_0.world" />
    <!-- <arg name="world_name" default="$(find robot_gazebo)/worlds/test_sensors_1.world" /> -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)" />
        <arg name="paused" value="false" />
        <arg name="use_sim_time" value="true" />
        <arg name="gui" value="$(arg use_gui)" />
        <arg name="headless" value="false" />
        <arg name="debug" value="false" />
    </include>

    <node pkg="tf2_ros" type="static_transform_publisher" name="sim_baselink_to_baselink" args="0 0 0 0 0 0 /sim/base_link /base_link" if="$(arg use_baselink)"/>
    <node pkg="tf" type="static_transform_publisher" name="sim_velodyne_to_baselink" args="0.4 0 0.7 1.578795 0 0 base_link /sim/velodyne 10" if="$(arg hdl)" />

    <param name="robot_description" command="$(find xacro)/xacro $(find robot_description)/urdf/diff/robot_with_sensors.urdf.xacro" />
    <node pkg="gazebo_ros" type="spawn_model" name="model" args="-urdf -model cleanrobot -param robot_description" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
        <param name="tf_prefix" value="sim"/>
    </node>
    <include file="$(find robot_control)/launch/control.launch" />
    
    <remap from="/cmd_vel" to="/nav/cmd_vel"/>

    <node name="p3d_base_footprint" pkg="robot_utility" type="fromP3dToTF" args="base_footprint">
        <param name="parent_frame" value="world"/>
        <param name="child_frame" value="/sim/base_footprint"/>
        <param name="topic" value="odom_basefootprint"/>
    </node>

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find robot_description)/rviz/test_sensors.rviz" if="$(arg use_rviz)" />

    <node name="tele" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" />

    <rosparam command="load" file="$(find robot_description)/sensors/config/sensors_covariance.yaml"/>
    <node name="remap_topic_node" pkg="robot_utility" type="remap_topic_node"/>

</launch>
